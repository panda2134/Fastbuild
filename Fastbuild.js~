/*
    Fastbuild.js
    By:panda_2134
    Developing version 0.131
    Update(s):
    Small changes
    2015/1/21
*/
var builder=471;
var fountain=472;
var s_brick_h=473;
ModPE.setItem(builder,"paper",0,"Builder");
ModPE.setItem(fountain,"map_filled",0,"Fountain Builder");
ModPE.setItem(s_brick_h,"map_filled",0,"Stone Brick House Builder");
Item.addShapedRecipe(builder,1,0,[" p ","w w"," p "],["w",5,0,"p",339,0]);
Item.addShapedRecipe(fountain,1,0,[" s "," b "," w "],["w",325,8,"b",builder,0,"s",98,0]);
Item.addShapedRecipe(s_brick_h,1,0,["fbf","bub","fbf"],["f",85,0,"b",98,0,"u",builder,0]);
Player.addItemCreativeInv(builder,1,0);
Player.addItemCreativeInv(fountain,1,0);
Player.addItemCreativeInv(s_brick_h,1,0);
function fountainBuild(x,y,z){
    for(i=x;i<x+5;i++)
            for(j=z;j<z+5;j++)
                setTile(i,y-1,j,98);
        for(i=x;i<x+5;i++)
            for(j=z;j<z+5;j++)
                setTile(i,y+1,j,0);
        for(i=x;i<x+5;i++)
            for(j=z;j<z+5;j++)
                setTile(i,y+2,j,0);
        setTile(x,y,z,0);
        setTile(x,y,z+1,0);
        setTile(x,y,z+2,44,5);
        setTile(x,y,z+3,0);
        setTile(x,y,z+4,0);
        
        setTile(x+1,y,z,0);
        setTile(x+1,y,z+1,44,5);
        setTile(x+1,y,z+2,0);
        setTile(x+1,y,z+3,44,5);
        setTile(x+1,y,z+4,0);
        
        setTile(x+2,y,z,44,5);
        setTile(x+2,y,z+1,0);
        setTile(x+2,y,z+2,0);
        setTile(x+2,y,z+3,0);
        setTile(x+2,y,z+4,44,5);
        
        setTile(x+3,y,z,0);
        setTile(x+3,y,z+1,44,5);
        setTile(x+3,y,z+2,0);
        setTile(x+3,y,z+3,44,5);
        setTile(x+3,y,z+4,0);
        
        setTile(x+4,y,z,0);
        setTile(x+4,y,z+1,0);
        setTile(x+4,y,z+2,44,5);
        setTile(x+4,y,z+3,0);
        setTile(x+4,y,z+4,0);

		setTile(x+2,y+2,z+2,8);
}

function sBrickHouseBuild(jx,jy,jz){
    var code,a=0;
    try{
        code=[-8,0,-7,2,0,-8,0,-6,2,0,-8,0,-5,2,0,-8,0,-4,2,0,-8,0,-3,2,0,-8,0,-2,2,0,-8,0,-1,2,0,-8,0,0,2,0,-8,1,-7,0,0,-8,1,-6,0,0,-8,1,-5,0,0,-8,1,-4,0,0,-8,1,-3,0,0,-8,1,-2,0,0,-8,1,-1,0,0,-8,1,0,0,0,-8,2,-7,0,0,-8,2,-6,0,0,-8,2,-5,0,0,-8,2,-4,0,0,-8,2,-3,0,0,-8,2,-2,0,0,-8,2,-1,0,0,-8,2,0,0,0,-8,3,-7,0,0,-8,3,-6,0,0,-8,3,-5,0,0,-8,3,-4,0,0,-8,3,-3,0,0,-8,3,-2,0,0,-8,3,-1,0,0,-8,3,0,0,0,-8,4,-7,0,0,-8,4,0,0,0,-8,5,-6,0,0,-8,5,-5,0,0,-8,5,-4,0,0,-8,5,-3,0,0,-8,5,-2,0,0,-8,5,-1,0,0,-8,5,0,0,0,-7,0,-7,2,0,-7,0,-6,98,0,-7,0,-5,98,0,-7,0,-4,98,0,-7,0,-3,98,0,-7,0,-2,98,0,-7,0,-1,98,0,-7,0,0,2,0,-7,1,-7,0,0,-7,1,-6,98,0,-7,1,-5,98,0,-7,1,-4,98,0,-7,1,-3,98,0,-7,1,-2,98,0,-7,1,-1,98,0,-7,1,0,0,0,-7,2,-7,0,0,-7,2,-6,98,0,-7,2,-5,98,0,-7,2,-4,98,0,-7,2,-3,98,0,-7,2,-2,98,0,-7,2,-1,98,0,-7,2,0,0,0,-7,3,-7,0,0,-7,3,-6,98,0,-7,3,-5,98,0,-7,3,-4,98,0,-7,3,-3,98,0,-7,3,-2,98,0,-7,3,-1,98,0,-7,3,0,0,0,-7,4,-6,98,0,-7,4,-5,98,0,-7,4,-4,98,0,-7,4,-3,98,0,-7,4,-2,98,0,-7,4,-1,98,0,-7,5,-7,0,0,-7,5,-6,85,0,-7,5,-5,85,0,-7,5,-4,85,0,-7,5,-3,85,0,-7,5,-2,85,0,-7,5,-1,85,0,-7,5,0,0,0,-6,0,-7,2,0,-6,0,-6,98,0,-6,0,-5,98,0,-6,0,-4,98,0,-6,0,-3,98,0,-6,0,-2,98,0,-6,0,-1,98,0,-6,0,0,2,0,-6,1,-7,0,0,-6,1,-6,98,0,-6,1,-5,47,0,-6,1,-4,0,0,-6,1,-3,0,0,-6,1,-1,98,0,-6,1,0,0,0,-6,2,-7,0,0,-6,2,-6,85,0,-6,2,-5,47,0,-6,2,-1,85,0,-6,2,0,0,0,-6,3,-7,0,0,-6,3,-6,0,0,-6,3,-5,0,0,-6,3,-4,0,0,-6,3,-3,0,0,-6,3,-1,0,0,-6,3,0,0,0,-6,4,-6,98,0,-6,4,-5,98,0,-6,4,-4,98,0,-6,4,-3,98,0,-6,4,-1,98,0,-6,5,-7,0,0,-6,5,-6,85,0,-6,5,-5,0,0,-6,5,-4,0,0,-6,5,-3,0,0,-6,5,-2,0,0,-6,5,-1,85,0,-6,5,0,0,0,-5,0,-7,2,0,-5,0,-6,98,0,-5,0,-5,98,0,-5,0,-4,98,0,-5,0,-3,98,0,-5,0,-2,98,0,-5,0,-1,98,0,-5,0,0,2,0,-5,1,-7,0,0,-5,1,-6,98,0,-5,1,-5,47,0,-5,1,-4,0,0,-5,1,-3,0,0,-5,1,-2,0,0,-5,1,-1,98,0,-5,1,0,0,0,-5,2,-7,0,0,-5,2,-6,85,0,-5,2,-5,47,0,-5,2,-4,0,0,-5,2,-3,0,0,-5,2,-2,0,0,-5,2,-1,85,0,-5,2,0,0,0,-5,3,-7,0,0,-5,3,-6,0,0,-5,3,-5,0,0,-5,3,-4,0,0,-5,3,-3,0,0,-5,3,-2,0,0,-5,3,-1,0,0,-5,3,0,0,0,-5,4,-6,98,0,-5,4,-5,98,0,-5,4,-4,98,0,-5,4,-3,98,0,-5,4,-2,98,0,-5,4,-1,98,0,-5,5,-7,0,0,-5,5,-6,85,0,-5,5,-5,0,0,-5,5,-4,0,0,-5,5,-3,0,0,-5,5,-2,0,0,-5,5,-1,85,0,-5,5,0,0,0,-4,0,-7,2,0,-4,0,-6,98,0,-4,0,-5,98,0,-4,0,-4,98,0,-4,0,-3,98,0,-4,0,-2,98,0,-4,0,-1,98,0,-4,0,0,2,0,-4,1,-7,0,0,-4,1,-6,98,0,-4,1,-5,61,3,-4,1,-4,0,0,-4,1,-3,0,0,-4,1,-2,0,0,-4,1,-1,98,0,-4,1,0,0,0,-4,2,-7,0,0,-4,2,-6,85,0,-4,2,-5,0,0,-4,2,-4,0,0,-4,2,-3,0,0,-4,2,-2,0,0,-4,2,-1,107,2,-4,2,0,0,0,-4,3,-7,0,0,-4,3,-6,0,0,-4,3,-5,0,0,-4,3,-4,0,0,-4,3,-3,0,0,-4,3,-2,0,0,-4,3,-1,0,0,-4,3,0,0,0,-4,4,-6,98,0,-4,4,-5,98,0,-4,4,-4,98,0,-4,4,-3,98,0,-4,4,-2,98,0,-4,4,-1,98,0,-4,5,-7,0,0,-4,5,-6,85,0,-4,5,-5,54,[3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],-4,5,-4,0,0,-4,5,-3,0,0,-4,5,-2,0,0,-4,5,-1,85,0,-4,5,0,0,0,-3,0,-7,2,0,-3,0,-6,98,0,-3,0,-5,98,0,-3,0,-4,98,0,-3,0,-3,98,0,-3,0,-2,98,0,-3,0,-1,98,0,-3,0,0,2,0,-3,1,-7,0,0,-3,1,-6,98,0,-3,1,-5,245,0,-3,1,-4,0,0,-3,1,-3,0,0,-3,1,-2,0,0,-3,1,-1,98,0,-3,1,0,0,0,-3,2,-7,0,0,-3,2,-6,85,0,-3,2,-5,0,0,-3,2,-4,0,0,-3,2,-3,0,0,-3,2,-2,0,0,-3,2,-1,85,0,-3,2,0,0,0,-3,3,-7,0,0,-3,3,-6,0,0,-3,3,-5,0,0,-3,3,-4,0,0,-3,3,-3,0,0,-3,3,-2,0,0,-3,3,-1,0,0,-3,3,0,0,0,-3,4,-6,98,0,-3,4,-5,98,0,-3,4,-4,98,0,-3,4,-3,98,0,-3,4,-2,98,0,-3,4,-1,98,0,-3,5,-7,0,0,-3,5,-6,85,0,-3,5,-5,54,[3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],-3,5,-4,0,0,-3,5,-3,0,0,-3,5,-2,0,0,-3,5,-1,85,0,-3,5,0,0,0,-2,0,-7,2,0,-2,0,-6,98,0,-2,0,-5,98,0,-2,0,-4,98,0,-2,0,-3,98,0,-2,0,-2,98,0,-2,0,-1,98,0,-2,0,0,2,0,-2,1,-7,0,0,-2,1,-6,98,0,-2,1,-5,58,0,-2,1,-4,0,0,-2,1,-3,0,0,-2,1,-2,0,0,-2,1,-1,98,0,-2,1,0,0,0,-2,2,-7,0,0,-2,2,-6,85,0,-2,2,-5,0,0,-2,2,-4,0,0,-2,2,-3,0,0,-2,2,-2,0,0,-2,2,-1,85,0,-2,2,0,0,0,-2,3,-7,0,0,-2,3,-6,0,0,-2,3,-5,0,0,-2,3,-4,0,0,-2,3,-3,0,0,-2,3,-2,0,0,-2,3,-1,0,0,-2,3,0,0,0,-2,4,-6,98,0,-2,4,-5,98,0,-2,4,-4,98,0,-2,4,-3,98,0,-2,4,-2,98,0,-2,4,-1,98,0,-2,5,-7,0,0,-2,5,-6,85,0,-2,5,-5,26,10,-2,5,-4,26,2,-2,5,-3,0,0,-2,5,-2,0,0,-2,5,-1,85,0,-2,5,0,0,0,-1,0,-7,2,0,-1,0,-6,98,0,-1,0,-5,98,0,-1,0,-4,98,0,-1,0,-3,98,0,-1,0,-2,98,0,-1,0,-1,98,0,-1,0,0,2,0,-1,1,-7,0,0,-1,1,-6,98,0,-1,1,-5,98,0,-1,1,-4,98,0,-1,1,-3,98,0,-1,1,-2,98,0,-1,1,-1,98,0,-1,1,0,0,0,-1,2,-7,0,0,-1,2,-6,85,0,-1,2,-5,85,0,-1,2,-4,85,0,-1,2,-3,85,0,-1,2,-2,85,0,-1,2,-1,85,0,-1,2,0,0,0,-1,3,-7,0,0,-1,3,-6,0,0,-1,3,-5,0,0,-1,3,-4,0,0,-1,3,-3,0,0,-1,3,-2,0,0,-1,3,-1,0,0,-1,3,0,0,0,-1,4,-6,98,0,-1,4,-5,98,0,-1,4,-4,98,0,-1,4,-3,98,0,-1,4,-2,98,0,-1,4,-1,98,0,-1,5,-7,0,0,-1,5,-6,85,0,-1,5,-5,85,0,-1,5,-4,85,0,-1,5,-3,85,0,-1,5,-2,85,0,-1,5,-1,85,0,-1,5,0,0,0,0,0,-7,2,0,0,0,-6,2,0,0,0,-5,2,0,0,0,-4,2,0,0,0,-3,2,0,0,0,-2,2,0,0,0,-1,2,0,0,1,-7,0,0,0,1,-6,0,0,0,1,-5,0,0,0,1,-4,0,0,0,1,-3,0,0,0,1,-2,0,0,0,1,-1,0,0,0,1,0,0,0,0,2,-7,0,0,0,2,-6,0,0,0,2,-5,0,0,0,2,-4,0,0,0,2,-3,0,0,0,2,-2,0,0,0,2,-1,0,0,0,2,0,0,0,0,3,-7,0,0,0,3,-6,0,0,0,3,-5,0,0,0,3,-4,0,0,0,3,-3,0,0,0,3,-2,0,0,0,3,-1,0,0,0,3,0,0,0,0,4,-7,0,0,0,4,0,0,0,0,5,-7,0,0,0,5,-6,0,0,0,5,-5,0,0,0,5,-4,0,0,0,5,-3,0,0,0,5,-2,0,0,0,5,-1,0,0,0,5,0,0,0,-8,4,-6,50,2,-8,4,-5,50,2,-8,4,-4,50,2,-8,4,-3,50,2,-8,4,-2,50,2,-8,4,-1,50,2,-7,4,-7,50,4,-7,4,0,50,3,-6,1,-2,65,5,-6,2,-4,50,1,-6,2,-3,50,1,-6,2,-2,65,5,-6,3,-2,65,5,-6,4,-7,50,4,-6,4,-2,96,6,-6,4,0,50,3,-5,4,-7,50,4,-5,4,0,50,3,-4,4,-7,50,4,-4,4,0,50,3,-3,4,-7,50,4,-3,4,0,50,3,-2,4,-7,50,4,-2,4,0,50,3,-1,4,-7,50,4,-1,4,0,50,3,0,4,-6,50,1,0,4,-5,50,1,0,4,-4,50,1,0,4,-3,50,1,0,4,-2,50,1,0,4,-1,50,1];
    }catch(err){
        clientMessage("Sorry,an error occured while building stone brick house.");
        return -1;
    }for(i=0;i<code.length;i=i+5){
        if(code[i+3]==63 || code[i+3]==68){
            Level.setTile(parseInt(code[i+0])+jx,parseInt(code[i+1])+jy,parseInt(code[i+2])+jz,code[i+3],code[i+4][0]);
            for(ii=1;ii<code[i+4].length;ii++){Level.setSignText(parseInt(code[i+0])+jx,parseInt(code[i+1])+jy,parseInt(code[i+2])+jz,ii-1,code[i+4][ii]);
            }
        }else if(code[i+3]==54){
            Level.setTile(parseInt(code[i+0])+jx,parseInt(code[i+1])+jy,parseInt(code[i+2])+jz,code[i+3],code[i+4][0]);
            var arr=code[i+4];
            arr.shift();
            for(ii=0;ii<arr.length;ii=ii+3){
                Level.setChestSlot(parseInt(code[i+0])+jx,parseInt(code[i+1])+jy,parseInt(code[i+2])+jz,ii/3,arr[ii],arr[ii+1],arr[ii+2]);
            }
        }else{
            Level.setTile(parseInt(code[i+0])+jx,parseInt(code[i+1])+jy,parseInt(code[i+2])+jz,code[i+3],code[i+4]);
        }
        a++;
    }
    return a;
}
function useItem(x,y,z,itemId,blockId,side){
    if(itemId==fountain){
        fountainBuild(x-2,y+1,z-2);
        addItemInventory(itemId,-1,0);
    }else if(itemId==s_brick_h){
        sBrickHouseBuild(x,y,z);
        addItemInventory(itemId,-1,0);
    }
}

